<snippet>
  <description>LCA using binary lifting</description>
  <content><![CDATA[#define MAXH 20  // max depth is 2^19
vector<int> g[MAXN];
int lca[MAXN][MAXH], depth[MAXN];

void dfs(int u, int p, int d) {
  lca[u][0] = p;
  depth[u] = d;
  for (auto v : g[u]) {
    if (v==p) continue;
    dfs(v, u, d+1);
  }
}

// return p-th ancestor of u
int lift(int u, int p) {
  for (int i = 0; i < MAXH; ++i) {
    if ((p >> i) & 1) {
      u = lca[u][i];
    }
  }
  return u;
}

// distance between u and v
int dist(int u, int v){
  if (depth[u] < depth[v]) swap(u, v);
  int ret = depth[u] - depth[v];
  u = lift(u, ret);
  if (u==v) return ret;
  for (int i = MAXH-1; i >= 0; --i) {
    if (lca[u][i] != lca[v][i]) {
      u = lca[u][i];
      v = lca[v][i];
      ret += 2 * (1 << i);
    }
  }
  assert(lca[u][0]==lca[v][0]);
  ret += 2;  // since u and v are nodes just below lca add 2 to the distance
  return ret;
}

  // parent of root node (1) is set to root node itself to enable lift 'above' root
  dfs(1, 1, 1);
  
  // fill lifting table
  for (int h = 1; h < MAXH; ++h) {
    for (int u = 0; u <= n; ++u) {
      lca[u][h] = lca[lca[u][h-1]][h-1];
    }
  }
]]></content>
  <tabTrigger>lca-lifting</tabTrigger>
  <scope>source.c, source.objc, source.c++, source.objc++</scope>
</snippet>
